<!DOCTYPE html>
<html lang="zxx" class="js">
<!-- Mirrored from dashlite.net/demo1/components/forms/form-upload.html by HTTrack Website Copier/3.x [XR&CO'2014], Wed, 07 May 2025 07:45:04 GMT -->
<!-- Added by HTTrack -->
<meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->

<head>
    <meta charset="utf-8">
    <meta name="author" content="Softnio">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description"
        content="A powerful and conceptual apps base dashboard template that especially build for developers and programmers.">
    <link rel="shortcut icon" href="../../images/favicon.png">
    <title>Nolspan | Report</title>
    <link rel="stylesheet" href="../../assets/css/dashlitee1e3.css?ver=3.2.4">
    <link id="skin-default" rel="stylesheet" href="../../assets/css/themee1e3.css?ver=3.2.4">
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-91615293-4"></script>
    <script>window.dataLayer = window.dataLayer || []; function gtag() { dataLayer.push(arguments); } gtag('js', new Date()); gtag('config', 'UA-91615293-4');</script>
</head>

<body class="nk-body bg-lighter npc-general has-sidebar ">
    <div class="nk-app-root">
        <div class="nk-main ">
            <%- include('sidebar.ejs') -%>
                <div class="nk-wrap ">
                    <%- include('header.ejs')-%>
                        <div class="nk-content ">
                            <div class="container-fluid">
                                <div class="nk-content-inner">
                                    <div class="nk-content-body">
                                        <div class="nk-block-head nk-block-head-sm">
                                            <div class="nk-block-between">
                                                <div class="nk-block-head-content">
                                                    <h3 class="nk-block-title page-title">NOLSPAN</h3>
                                                    <div class="nk-block-des text-soft">
                                                        <p>Sales force</p>
                                                    </div>
                                                </div>

                                            </div>
                                        </div>
                                        <div class="nk-block nk-block-lg">
                                            <div class="card card-bordered card-preview mb-3">
                                                <div class="card-inner">
                                                    <div class="preview-block">
                                                        <div class="row gy-4">
                                                            <div class="col-md-4">
                                                                <div class="form-group">
                                                                    <label class="form-label" for="agent">Agent
                                                                        name</label>
                                                                    <div class="form-control-wrap">
                                                                        <div class="form-control-select">
                                                                            <select class="form-control required"
                                                                                data-msg="Required" id="agent"
                                                                                name="agent" required>
                                                                                <option value="">---Select
                                                                                    agent---</option>
                                                                                <%agents.forEach((agent)=> {
                                                                                    %>
                                                                                    <option
                                                                                        value="<%= agent.branch_id %>">
                                                                                        <%= agent.name %>
                                                                                    </option>
                                                                                    <% }) %>
                                                                                        <!-- Options will be inserted dynamically -->
                                                                            </select>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>

                                                            <div class="col-md-4">
                                                                <div class="form-group">
                                                                    <label class="form-label"
                                                                        for="period">Period</label>
                                                                    <div class="form-control-wrap">
                                                                        <div class="form-control-select">
                                                                            <select class="form-control required"
                                                                                data-msg="Required" id="period"
                                                                                name="period" required>
                                                                                <option value="">---Select
                                                                                    period---</option>
                                                                                <option value="today">today
                                                                                </option>
                                                                                <option value="this_week">weekly
                                                                                </option>
                                                                                <option value="this_month">mothly
                                                                                </option>
                                                                                <option value="this_year">annually
                                                                                </option>
                                                                            </select>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>

                                                            <div class="col-md-4">
                                                                <div class="form-group"><label class="form-label"
                                                                        for="price">transfer from</label>
                                                                    <div class="form-control-wrap"> <input type="date"
                                                                            class="form-control" id="transferFrom"
                                                                            name="issuedFrom" placeholder="YYYY-MM-DD">
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-4">
                                                                <div class="form-group">
                                                                    <label class="form-label" for="issueTo">transfer
                                                                        to</label>
                                                                    <div class="form-control-wrap">
                                                                        <input type="date" class="form-control"
                                                                            id="transferTo" placeholder="yyyy-mm-dd">
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-12">
                                                                <div class="form-group">
                                                                    <button type="button" id="filterButton"
                                                                        class="btn btn-primary mt-2">Apply
                                                                        Filter</button>
                                                                </div>
                                                            </div>
                                                            <div class="js-preloader" style="display: none;">
                                                                <div class="loading-animation tri-ring"></div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <!-- Your Table -->
                                            <div class="card card-bordered mb-3">
                                                <div class="card-inner">
                                                    <h5>Total Served Amount: <span id="totalServedAmount">0</span></h5>
                                                </div>
                                            </div>
                                            <div class="card card-bordered card-preview">
                                                <div class="card-inner">
                                                    <div id="downloadReportWrapper" class="mb-3 text-end"
                                                        style="display:none;">
                                                        <button id="downloadReport" class="btn btn-primary">
                                                            <em class="icon ni ni-download"></em> Download Report
                                                        </button>
                                                    </div>

                                                    <table id="requestsTable" class="datatable-init-export nowrap table"
                                                        data-export-title="Export">
                                                        <thead>
                                                            <tr class="nk-tb-item nk-tb-head">
                                                                <th class="nk-tb-col"><span class="sub-text">SNO</span>
                                                                </th>
                                                                <th class="nk-tb-col"><span class="sub-text">Transaction
                                                                        Date</span></th>
                                                                <th class="nk-tb-col"><span class="sub-text">Transaction
                                                                        ID</span></th>
                                                                <th class="nk-tb-col"><span class="sub-text">
                                                                        Debit</span></th>
                                                                <th class="nk-tb-col"><span class="sub-text">
                                                                        Credit</span></th>
                                                                <th class="nk-tb-col"><span class="sub-text">Running
                                                                        Balance</span></th>
                                                                <th class="nk-tb-col"><span class="sub-text">Trans for
                                                                        Customer</span></th>
                                                            </tr>
                                                        </thead>
                                                        <tbody></tbody>
                                                    </table>
                                                </div>
                                            </div>

                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                        <%- include('footer.ejs')-%>
                </div>
        </div>
        <div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 1100;"></div>
    </div>

    <script src="../../assets/js/bundlee1e3.js?ver=3.2.4"></script>
    <script src="../../assets/js/scriptse1e3.js?ver=3.2.4"></script>
    <script src="../../assets/js/demo-settingse1e3.js?ver=3.2.4"></script>
    <script src="../../assets/js/libs/datatable-btnse1e3.js?ver=3.2.4"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.28/jspdf.plugin.autotable.min.js"></script>

    <script>

        $(document).ready(function () {
            $(".date-picker").flatpickr({
                dateFormat: "Y-m-d" // This is 2025-07-06 format
            });
        });

        $(document).ready(function () {
            const $period = $('#period');
            const $transferFrom = $('#transferFrom');

            $transferFrom.on('change', function () {
                if ($(this).val()) {
                    // Disable period dropdown if a date is selected
                    $period.prop('disabled', true);
                } else {
                    // Enable period dropdown if date is cleared
                    $period.prop('disabled', false);
                }
            });

            // Optional: If you also want to disable transferFrom when period is selected
            $period.on('change', function () {
                if ($(this).val()) {
                    $('#transferFrom').prop('disabled', true);
                    $('#transferTo').prop('disabled', true);
                } else {
                    $('#transferFrom').prop('disabled', false);
                    $('#transferTo').prop('disabled', false);
                }
            });
        });

        $(document).ready(function () {
            if (!$.fn.DataTable.isDataTable('#requestsTable')) {
                $('#requestsTable').DataTable({
                    pageLength: 10,
                    responsive: true,
                    autoWidth: false,
                });
            }
        });

        $(document).ready(function () {
            // Helper: format date as DD/MM/YYYY
            function formatDate(dateStr) {
                if (!dateStr) return 'N/A';
                const date = new Date(dateStr);
                return isNaN(date.getTime())
                    ? 'N/A'
                    : date.toLocaleDateString('en-GB', {
                        day: '2-digit',
                        month: '2-digit',
                        year: 'numeric',
                    });
            }

            // Initialize DataTable
            let table = $('#requestsTable').DataTable({
                paging: true,
                searching: true,
                ordering: true,
                destroy: true, // allows safe re-init
                pageLength: 10,
                responsive: true,
                dom: 'Bfrtip', // needed for buttons
                buttons: [
                    { extend: 'copy', text: 'Copy' },
                    { extend: 'csv', text: 'CSV' },
                    { extend: 'excel', text: 'Excel' },
                    { extend: 'pdf', text: 'PDF' },
                    { extend: 'print', text: 'Print' }
                ],
                columnDefs: [
                    { orderable: false, searchable: false, targets: 0 } // disable sorting/search on SNO
                ]
            });

            let lastResponse = null; // store API response for PDF use

            // Fetch + populate with DataTable API
            function fetchAndPopulateTable(filters) {
                let queryString = Object.keys(filters)
                    .filter(key => filters[key])
                    .map(key => `${key}=${encodeURIComponent(filters[key])}`)
                    .join('&');

                const filterRoute = `/agent/agents?${queryString}`;

                swal.fire({
                    title: 'Filtering...',
                    allowOutsideClick: false,
                    allowEscapeKey: false,
                    didOpen: () => {
                        swal.showLoading();
                    }
                });

                $.ajax({
                    url: filterRoute,
                    method: 'GET',
                    dataType: 'json',
                    success: function (response) {
                        console.log("Fetched:", response);
                        lastResponse = response; // save response for download

                        if (response?.data?.data && response.data.data.length > 0) {
                            swal.fire({
                                icon: 'success',
                                title: 'Success!',
                                text: response.data.message || 'Filtered successfully',
                                showConfirmButton: false,
                                timer: 2000
                            });
                        } else {
                            swal.fire({
                                icon: 'warning',
                                title: 'warning!',
                                text: response.data.message || 'No data found',
                                showConfirmButton: true,
                            });
                        }


                        // Reset total amount
                        if (response?.data?.statementDetails?.total_credit) {
                            $('#totalServedAmount').text(
                                Number(response.data.statementDetails.total_credit).toLocaleString()
                            );
                        } else {
                            $('#totalServedAmount').text('0');
                        }

                        // Clear DataTable
                        table.clear();

                        let index = 0;
                        if (Array.isArray(response?.data?.data) && response.data.data.length > 0) {
                            response.data.data.forEach(agent => {
                                if (Array.isArray(agent.transactions) && agent.transactions.length > 0) {
                                    agent.transactions.forEach(tx => {
                                        console.log('Agent:', tx.credit);
                                        index++;
                                        table.row.add([
                                            index,
                                            tx.transfer_date || 'N/A',
                                            tx.transaction_id || 'N/A',
                                            tx.debit === null || tx.debit === undefined
                                                ? 'N/A'
                                                : Number(tx.debit).toLocaleString(),
                                            tx.credit === null || tx.credit === undefined
                                                ? 'N/A'
                                                : Number(tx.credit).toLocaleString(),
                                            tx.source_balance_after ? Number(tx.source_balance_after).toLocaleString() : 'N/A',
                                            tx.destination_id || 'N/A',
                                        ]);
                                    });
                                }
                            });
                        }

                        // Redraw DataTable
                        table.draw();
                        $('#downloadReportWrapper').show();

                    },
                    error: function (xhr) {
                        console.error("Error fetching filtered data:", xhr);
                        $('#totalServedAmount').text('0');
                        $('#downloadReportWrapper').hide();

                        swal.fire({
                            icon: 'error',
                            title: 'Error!',
                            text: xhr.responseJSON?.message || 'Error while fetching data',
                            showConfirmButton: true
                        });

                        // Clear DataTable if error
                        table.clear().draw();
                    }
                });
            }

            // Filter button click
            $('#filterButton').on('click', function () {
                const filters = {
                    branch_id: $('#agent').val(),
                    dateRange: $('#period').val(),
                    fromDate: $('#transferFrom').val(),
                    toDate: $('#transferTo').val()
                };

                fetchAndPopulateTable(filters);
            });

            // Download Report button
            $('#downloadReport').on('click', function () {
                if (!lastResponse) return;

                const { jsPDF } = window.jspdf;
                const doc = new jsPDF('landscape', 'pt', 'a4'); // ✅ landscape

                const details = lastResponse?.data?.statementDetails || {};
                const agent = (Array.isArray(lastResponse?.data?.data) && lastResponse.data.data.length > 0)
                    ? lastResponse.data.data[0]
                    : {};
                const agentName = agent.agent_name || 'N/A';
                const agentId = agent.branch_id || 'N/A';

                // Format values
                const totalCredit = details.total_credit ? Number(details.total_credit).toLocaleString() : '0';
                const totalDebit = details.total_debit ? Number(details.total_debit).toLocaleString() : '0';
                const totalTransactions = details.total_transactions || '0';
                const totalCustomers = details.total_customers_served || '0';
                const reportDate = details.reportGeneratedOn
                    ? new Date(details.reportGeneratedOn).toLocaleDateString('en-GB', { day: '2-digit', month: 'long', year: 'numeric' })
                    : new Date().toLocaleDateString();
                const periodFrom = details.period?.startDate
                    ? new Date(details.period.startDate).toLocaleDateString('en-GB', { day: '2-digit', month: 'long', year: 'numeric' })
                    : '-';
                const periodTo = details.period?.endDate
                    ? new Date(details.period.endDate).toLocaleDateString('en-GB', { day: '2-digit', month: 'long', year: 'numeric' })
                    : '-';

                // ============================
                // HEADER SECTION
                // ============================
                doc.setFontSize(14);
                doc.text("Statement For", 40, 40);

                doc.setFontSize(16);
                doc.setFont("helvetica", "bold");
                doc.text(`${agentName} (${agentId})`, 40, 65);

                doc.setFontSize(13);
                doc.setFont("helvetica", "bold");
                doc.text("Statement Details", 40, 105);

                doc.setFontSize(16);
                doc.setFont("helvetica", "bold");
                doc.text(`${agentName} (${agentId})`, 40, 65);

                doc.setFontSize(13);
                doc.setFont("helvetica", "bold");
                doc.text("Statement Details", 40, 105);

                // ===== DETAILS =====
                doc.setFontSize(11);
                doc.setFont("helvetica", "normal"); // ✅ switch back to normal
                let y = 130;
                doc.text(`Date: ${reportDate}`, 40, y); y += 20;
                if (periodFrom !== '-' && periodTo !== '-') {
                    doc.text(`Period: ${periodFrom} to ${periodTo}`, 40, y);
                    y += 20;
                }
                doc.text(`Customers Attended: ${totalCustomers}`, 40, y); y += 20;
                doc.text(`Total Transactions: ${totalTransactions}`, 40, y); y += 20;
                doc.text(`Total Debit: ${totalDebit}`, 40, y); y += 20;
                doc.text(`Total Credit: ${totalCredit}`, 40, y);

                // ============================
                // TRANSACTIONS TABLE
                // ============================
                const data = table.rows({ search: 'applied' }).data().toArray();

                doc.autoTable({
                    head: [['SNO', 'Transaction Date', 'Transaction ID', 'Debit', 'Credit', 'Running Balance', 'Trans for Customer']],
                    body: data,
                    startY: y + 30,
                    theme: 'grid',
                    styles: {
                        fontSize: 11,
                        cellPadding: 5,
                        textColor: [0, 0, 0],      // ✅ black text
                        lineColor: [0, 0, 0],      // ✅ black lines
                        lineWidth: 0.25
                    },
                    headStyles: {
                        fillColor: [255, 255, 255],
                        textColor: [0, 0, 0],      // ✅ black text in header
                        lineColor: [0, 0, 0],      // ✅ black header borders
                        lineWidth: 0.5
                    },
                    bodyStyles: {
                        lineColor: [0, 0, 0],
                        lineWidth: 0.25,
                        textColor: [0, 0, 0]       // ✅ ensure black text for body
                    },
                    margin: { left: 40, right: 40 },
                    tableWidth: 'auto',
                });


                // ============================
                // SAVE FILE
                // ============================
                let safeAgentName = agentName.replace(/[^a-z0-9]/gi, '_');
                doc.save(`${safeAgentName}_statement_report.pdf`);
            });

        });

        $(document).ready(function () {
            $('#logout-link').on('click', function (e) {
                e.preventDefault();

                console.log('reached')
                $.ajax({
                    type: 'POST',
                    url: '/agent/logout',
                    contentType: 'application/json',
                    success: function (response) {
                        window.location.href = '/'
                    },
                    error: function (xhr) {
                        let message = "Request failed. Please try again.";
                        if (xhr.responseJSON && xhr.responseJSON.message) {
                            message = xhr.responseJSON.message;
                        }
                        return;
                    },
                });
            })
        })
    </script>
</body>

</html>